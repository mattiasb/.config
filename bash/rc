# -*- mode: sh -*-

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Source any potential machine local scripts
if [ -f "${HOME}/.config/bash/rc.local" ]; then
    . "${HOME}/.config/bash/rc.local"
fi

### Environment

## Set up PS1

if [ "${TERM}" = "xterm-256color" ] &&
       [ "$(systemctl is-active --user powerline-daemon.service)" = "active" ];
then
    POWERLINE_BASH_CONTINUATION=1
    POWERLINE_BASH_SELECT=1
    . /usr/share/powerline/bash/powerline.sh
else
    # My old prompt for reference
    # Git prompt
    if [ -f /usr/share/git-core/contrib/completion/git-prompt.sh ]; then
        source /usr/share/git-core/contrib/completion/git-prompt.sh
    fi

    # Screen, tmux and jhbuild shell
    if [[ -n "${UNDER_JHBUILD}" ]]; then
        PSE="${PSE}JH"
    fi
    if [[ -n "$STY" ]]; then
        if [[ -n "${PSE}" ]]; then
            PSE="${PSE},"
        fi
        PSE="${PSE}SC"
    fi
    if [[ -n "${TMUX}" ]]; then
        if [[ -n "${PSE}" ]]; then
            PSE="${PSE},"
        fi
        PSE="${PSE}TX"
    fi
    if [[ -n "${PSE}" ]]; then
        PSE="[\[\e[0;31m\]${PSE}\[\e[00m\]]"
    fi

    export PS1="\[\e[0;32m\]\u\[\e[00m\]${PSE} \[\e[0;33m\]\w\[\e[00m\]\$(type __git_ps1 1>/dev/null 2>/dev/null && __git_ps1) \$ "
fi

# Path
export PATH=$HOME/.cabal/bin:$HOME/.local/bin:$GEM_HOME/bin:$PATH
export LS_COLORS="di=36"

### Completion
for comp in ${HOME}/.config/bash_completion.d/*; do
    if [ -f "${comp}" ] ; then
        . "${comp}"
    fi
done

### History
shopt -s histappend
export HISTSIZE=10000
export HISTFILESIZE=100000
export HISTCONTROL=ignoredups:erasedups:ignorespace
export PROMPT_COMMAND="history -n; \
                       history -w; \
                       history -c; \
                       history -r; \
                       ${PROMPT_COMMAND:-true}"

### Aliases / Functions

alias dmesg="dmesg --human"
alias open="xdg-open"
alias ls="ls -h -B --color=auto  --group-directories-first"
alias tmux="tmux -f ~/.config/tmux/config"
alias tm="tmux a || tmux"
alias ansi="ansible-playbook -i 'localhost,' -c local"
alias wipehist="cat /dev/null > ~/.bash_history && history -c && exit"
alias ninja="ninja-build"
alias emacs="emacsclient -c"
alias refresh='source ~/.bashrc'
alias c='command'
alias sys='systemctl'
alias session='systemctl --user'

_completion_loader command
_completion_loader systemctl
complete -F _command c
complete -F _systemctl sys
complete -F _systemctl session
complete -G "*.yaml" -d  ansi
complete -W "" tm
complete -W "" wipehist
complete -W "" refresh

function _help-flag {
    [[ " ${*} " == *" --help "* ]] || [[ " ${*} " == *" -h "* ]]
}

function git-commiters () {
    if [ $# -eq 0 ]; then
        git log --oneline --pretty="format:%an <%ae>" | sort | uniq
    else
        git log --oneline --pretty="format:%an <%ae>" "${1}".. | sort | uniq
    fi
}

function mkcd () {
    if [ ! -e "${1}" ]; then
        mkdir -p "${1}"
    fi
    cd "${1}" || return $?
}
complete -d mkcd

function cpcd () {
    cp "${@}" && cd "${@: -1}" || return $?
}
_completion_loader _longopt
complete -F _longopt cpcd

function mvcd () {
    mv "${@}" && cd "${@: -1}" || return $?
}
_completion_loader _longopt
complete -F _longopt mvcd

function docker-enter {
    if [ -z "${1}" ]; then
        echo "Usage docker-enter <container>"
    else
        sudo docker exec -it "${1}" bash -c "export TERM=xterm; bash"
    fi
}

function create-project {
    mkcd "${HOME}/Code/Projects/${1}"
    git init
    echo "*~"   > .gitignore
    echo "*#*" >> .gitignore
    echo       >> .gitignore
    touch README.md
}
complete -W "" create-project

function simple-sync {
    if [ "${#}" -lt 3 ] || _help-flag "${@}"; then
        echo "Usage: simple-sync <host> <src> <dest>"
        echo
        echo "Sync (push) a directory to a remote ssh directory via lftp."
        return 2
    fi

    lftp -c "open sftp://${1}; mirror -c -e -R -L \"${2}\" \"${3}\""
}
