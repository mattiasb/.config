[user]
	name = Mattias Bengtsson
	email = mattias.jc.bengtsson@gmail.com
[push]
	default = simple
	followTags = true
[color]
	diff = always

[include]
	path = config.work

# Github
# Use SSH when I have access	
[url "ssh://git@github.com/mattiasb/"]
	pushInsteadOf = https://github.com/mattiasb/
[url "git@github.com"]
	insteadOf = github
[url "git@gitlab.com"]
	insteadOf = gitlab
[url "git@codeberg.org"]
	insteadOf = codeberg
[url "git@gitlab.gnome.org"]
	insteadOf = gnome

[core]
	pager = delta --features "$(gnome-color-scheme)"
	excludesfile = ~/.config/git/ignore
	editor = emacsclient -nw -c -s main
[alias]
	authors        = "!f() { git log --oneline --pretty='format:%aN <%aE>' ${1:+${1}..} | sort | uniq; }; f"
	slog             = log --oneline
	# Execute shell scripts in top directory.
	exec             = ! exec

	history-grep     = log -p -G

	pipenv           = "!f() { exec bash -c \"pipenv shell cd ${GIT_PREFIX:-.}\"; }; f"

	home             = "!f() { cd; git each $@ :: Documents/Magic/decks/ .config/ .config/emacs/ .local/bin/ Code/github.com/mattiasb/MachineSetup/ Code/Test/; }; f"
	projects         = "!f() { cd; git each $@ :: Code/github.com/mattiasb/*; }; f"

	sloc             = "!f() { git ls-files -z | xargs -0 cat | wc -l; }; f"
	sloc-report      = "!f() { cloc $(git ls-files); }; f"

	branches         = "!f() { git for-each-ref refs/heads/ --format='%(refname:short):%(committerdate:relative)' --sort=committerdate | column -t -s ':'; }; f"
	annotated-tags   = "!f() { git for-each-ref refs/tags/  --format '%(objecttype) %(refname:short)' | while read ty name; do [ $ty = tag    ] && echo $name; done }; f"
	lightweight-tags = "!f() { git for-each-ref refs/tags/  --format '%(objecttype) %(refname:short)' | while read ty name; do [ $ty = commit ] && echo $name; done }; f"
	patch-diff       = "!f() { diff -u <(git --no-pager show \"${1}\" | tail -n +2) <(git --no-pager show \"${2}\" | tail -n +2); }; f"
[diff]
	tool = meld
[rebase]
	autoStash = true
	updateRefs = true
[branch]
	autosetuprebase = always
[status]
	showUntrackedFiles = all
[gpg]
	program = gpg2
[magit]
	hideCampaign = true
[merge]
	tool = meld
[merge "ansible-vault"]
	name = Ansible vault merge driver
	driver = ansible-vault-merge %O %A %B %L %P
	recursive = binary
[diff "ansible-vault"]
	textconv = ansible-vault view
	cachetextconv = false

[github]
	user = mattiasb
[gitlab]
	host = http://gitlab.com/api/v4
	user = mattiasb
[gitlab "gitlab.gnome.org/api/v4"]
	user = mattiasb
[pull]
	rebase = true
[interactive]
	diffFilter = delta --color-only --features "$(gnome-color-scheme)"
[delta]
	navigate = t
[delta "light"]
	syntax-theme = GitHub
[delta "dark"]
	syntax-theme = Dracula
	light = false

[commit]
	status = false
[init]
	defaultBranch = main
[submodule]
	recurse = true
